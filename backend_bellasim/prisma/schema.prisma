// Define o cliente que será gerado (TypeScript)
generator client {
  provider = "prisma-client-js"
}

// Define a fonte de dados (nosso banco de dados)
datasource db {
  provider = "postgresql"
  // A URL é lida do arquivo .env
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  email                String    @unique
  name                 String
  password             String
  role                 String    @default("user")
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model RawMaterial {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  unit      String
  unitCost  String
  Diaper    Diaper[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Packaging {
  id          Int      @id @default(autoincrement())
  description String
  cost        String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BaleBag {
  id          Int      @id @default(autoincrement())
  description String
  cost        String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Commission {
  id          Int      @id @default(autoincrement())
  description String
  percent     String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tax {
  id          Int      @id @default(autoincrement())
  description String
  percent     String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Freight {
  id          Int      @id @default(autoincrement())
  description String
  percent     String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContributionMargin {
  id          Int      @id @default(autoincrement())
  description String
  percent     String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ST {
  id          Int      @id @default(autoincrement())
  description String
  percent     String   @unique
  Diaper      Diaper[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Diaper {
  id                        Int                @id @default(autoincrement())
  model                     String             @unique
  RawMaterial               RawMaterial[]
  rawMaterials              String[]
  rawMaterialsWeight        Json
  costPerRawMaterial        Json
  unitCost                  String?
  packageQuantity           String
  Packaging                 Packaging          @relation(fields: [packagingCost], references: [cost])
  packagingCost             String
  BaleBag                   BaleBag            @relation(fields: [baleBagCost], references: [cost])
  baleBagCost               String
  diaperPackageCost         String?
  diaperUnitCost            String?
  Commission                Commission         @relation(fields: [commissionPercent], references: [percent])
  commissionPercent         String
  Taxes                     Tax                @relation(fields: [taxesPercent], references: [percent])
  taxesPercent              String
  Freight                   Freight            @relation(fields: [freightPercent], references: [percent])
  freightPercent            String
  ContributionMargin        ContributionMargin @relation(fields: [contributionMarginPercent], references: [percent])
  contributionMarginPercent String
  ST                        ST                 @relation(fields: [STPercent], references: [percent])
  STPercent                 String
  salePrice                 String?
  unitSalePrice             String?
  salePriceWithST           String?
  unitSalePriceWithST       String?
  finalSalePrice            String?
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @updatedAt
}
